# Production configuration for Render deployment

# Server configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# Database configuration for Render PostgreSQL
# Render provides DATABASE_URL, we need to map it correctly
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Static resource serving for uploaded files
spring.web.resources.static-locations=classpath:/static/,file:/app/uploads/
spring.mvc.static-path-pattern=/uploads/**

# File storage paths for Render
app.avatar.storage.location=${APP_AVATAR_STORAGE_LOCATION:/app/uploads/avatar}
app.avatar.url.pattern=${APP_AVATAR_URL_PATTERN:https://healapp-backend.onrender.com/uploads/avatar/}

app.blog.storage.location=${APP_BLOG_STORAGE_LOCATION:/app/uploads/blog}
app.blog.url.pattern=${APP_BLOG_URL_PATTERN:https://healapp-backend.onrender.com/uploads/blog/}

app.config.storage.location=${APP_CONFIG_STORAGE_LOCATION:/app/uploads/config}
app.config.url.pattern=${APP_CONFIG_URL_PATTERN:https://healapp-backend.onrender.com/uploads/config/}

# Security configuration (JWT)
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-for-production-please-change-this-to-something-very-secure}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:3600000}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:86400000}
jwt.issuer=${JWT_ISSUER:HealApp}

# Logging configuration
logging.level.com.healapp=INFO
logging.level.root=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet.resource=DEBUG

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# CORS configuration for frontend
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://healapp-frontend.onrender.com,http://localhost:3000}

# Email configuration (you'll need to add your SMTP settings)
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME:your-email@gmail.com}
spring.mail.password=${SMTP_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Stripe Configuration
stripe.api.key=${STRIPE_API_KEY:your-stripe-secret-key}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:your-stripe-publishable-key}

# MB Bank API
banking.mb.api.url=${BANKING_MB_API_URL:https://api.mbbank.com.vn}
banking.mb.api.key=${BANKING_MB_API_KEY:}
banking.mb.device.id=${BANKING_MB_DEVICE_ID:healapp-device-001}

# MB Bank Account Information
banking.mb.account.number=${BANKING_MB_ACCOUNT_NUMBER:0349079940}
banking.mb.account.name=${BANKING_MB_ACCOUNT_NAME:NGUYEN VAN CUONG}

# SMS Configuration
sms.enabled=${SMS_ENABLED:true}
sms.provider=${SMS_PROVIDER:twilio}
sms.development.mode=${SMS_DEVELOPMENT_MODE:false}

# Verified phone numbers for Twilio trial (comma-separated)
twilio.verified.numbers=${TWILIO_VERIFIED_NUMBERS:+84349079940,+84982677408}

# Twilio Configuration
twilio.account.sid=${TWILIO_ACCOUNT_SID:your-twilio-sid}
twilio.auth.token=${TWILIO_AUTH_TOKEN:your-twilio-token}
twilio.phone.number=${TWILIO_PHONE_NUMBER:your-twilio-phone}

# QR Payment Settings
qr.payment.expiry.hours=${QR_PAYMENT_EXPIRY_HOURS:24}
qr.payment.check.interval.minutes=${QR_PAYMENT_CHECK_INTERVAL_MINUTES:2}
qr.payment.auto.check.enabled=${QR_PAYMENT_AUTO_CHECK_ENABLED:true}

# Banking Integration Settings
banking.api.timeout.seconds=${BANKING_API_TIMEOUT_SECONDS:30}
banking.api.retry.attempts=${BANKING_API_RETRY_ATTEMPTS:3}
banking.simulation.enabled=${BANKING_SIMULATION_ENABLED:false}

# MCP Server Configuration
mcp.api.provider=${MCP_API_PROVIDER:google}
mcp.api.base-url=${MCP_API_BASE_URL:https://generativelanguage.googleapis.com/v1beta}
mcp.api.key=${MCP_API_KEY:your-gemini-api-key}
mcp.api.model=${MCP_API_MODEL:gemini-2.0-flash}

# Content Moderation Configuration
healapp.moderation.enabled=${HEALAPP_MODERATION_ENABLED:true}
healapp.moderation.cache.enabled=${HEALAPP_MODERATION_CACHE_ENABLED:true}
healapp.moderation.cache.ttl=${HEALAPP_MODERATION_CACHE_TTL:3600}

# AI Assistant Configuration
healapp.assistant.max-history=${HEALAPP_ASSISTANT_MAX_HISTORY:10}